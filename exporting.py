import os
import sqlite3
import csv
import datetime
import json
import pandas as pd

def export_manager(data, export_as='csv', export_path=None, verbose=True, index=False):
    if export_path ==  'None':
        return

    # Default dir for exporting
    os.makedirs(export_path, exist_ok=True)

    export_as = export_as.lower()

    file_name = f"TPME_{datetime.datetime.now()}"
    header = "Generated by TPME - https://github.com/wlinds/tpme"

    if isinstance(data, list):

        if export_as == 'csv':
            csv_file_path = os.path.join(export_path, f"{file_name}.csv")
            with open(csv_file_path, "w") as csv_file:
                csv_writer = csv.writer(csv_file)
                csv_writer.writerow([header])
                for sample in data:
                    csv_writer.writerow(sample)

        elif export_as == 'json':
            json_file_path = os.path.join(export_path, f"{file_name}.json")
            with open(json_file_path, "w") as json_file:
                json.dump({"emails": data}, json_file, indent=2)

    elif isinstance(data, pd.DataFrame):

        # df = value_mapper(data)
    
        if export_as == 'excel' or export_as == 'xlsx':
            pd.DataFrame.to_excel(data, f'{export_path}/{file_name}.xlsx',index=index)

        elif export_as == 'sql':
            db_path = f'{export_path}/{file_name}.db'
            con = sqlite3.connect(db_path)
            data.to_sql('People', con=con, if_exists='replace')

        elif export_as == 'csv':
            pd.DataFrame.to_csv(data, f'{export_path}/{file_name}.csv,', index=index)

    if verbose:
        print(f'Saved as {export_as}: {export_path}/{file_name}')